{"ast":null,"code":"var _jsxFileName = \"/var/www/jaidshop/frontend/src/screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false,\n        order: action.payload,\n        error: ''\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function OrderScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const params = useParams();\n  const {\n    id: orderId\n  } = params;\n  const [{\n    loading,\n    error,\n    order\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: ''\n  }, []);\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/orders/${orderId}`, {\n          headers: {\n            authorization: ` Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    if (!userInfo) {\n      return navigate('/login');\n    }\n\n    if (!order._id || order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [order, userInfo, orderId, navigate]);\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Order \", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"Order \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderScreen, \"HIZTEZMC2JAVriaIbwUrrk9o3gg=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/var/www/jaidshop/frontend/src/screens/OrderScreen.js"],"names":["axios","React","useContext","useEffect","useReducer","Helmet","useNavigate","useParams","LoadingBox","MessageBox","Store","getError","reducer","state","action","type","loading","error","order","payload","OrderScreen","navigate","userInfo","params","id","orderId","dispatch","fetchOrder","data","get","headers","authorization","token","err","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,QAAT,QAAyB,UAAzB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAE5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BE,QAAAA,KAAK,EAAEJ,MAAM,CAACK,OAA1C;AAAoDF,QAAAA,KAAK,EAAE;AAA3D,OAAP;;AACJ,SAAK,YAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAEH,MAAM,CAACK;AAA1C,OAAP;;AAEJ;AACI,aAAON,KAAP;AATR;AAaH;;AAED,eAAe,SAASO,WAAT,GAAuB;AAAA;;AAClC,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAYX,UAAU,CAACQ,KAAD,CAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAeT,KAArB;AAEA,QAAMU,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAM;AAAEiB,IAAAA,EAAE,EAAEC;AAAN,MAAkBF,MAAxB;AAEA,QAAM,CAAC;AAAEP,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,EAA4BQ,QAA5B,IAAwCtB,UAAU,CAACQ,OAAD,EAAU;AAC9DI,IAAAA,OAAO,EAAE,IADqD;AAE9DE,IAAAA,KAAK,EAAE,EAFuD;AAG9DD,IAAAA,KAAK,EAAE;AAHuD,GAAV,EAIrD,EAJqD,CAAxD;AAMAd,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMwB,UAAU,GAAG,YAAY;AAC3B,UAAI;AACAD,QAAAA,QAAQ,CAAC;AAAEX,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACA,cAAM;AAAEa,UAAAA;AAAF,YAAW,MAAM5B,KAAK,CAAC6B,GAAN,CAAW,eAAcJ,OAAQ,EAAjC,EAAoC;AACvDK,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,WAAUT,QAAQ,CAACU,KAAM;AAA3C;AAD8C,SAApC,CAAvB;AAGAN,QAAAA,QAAQ,CAAC;AAAEX,UAAAA,IAAI,EAAE,eAAR;AAAyBI,UAAAA,OAAO,EAAES;AAAlC,SAAD,CAAR;AACH,OAND,CAME,OAAOK,GAAP,EAAY;AACVP,QAAAA,QAAQ,CAAC;AAAEX,UAAAA,IAAI,EAAE,YAAR;AAAsBI,UAAAA,OAAO,EAAER,QAAQ,CAACsB,GAAD;AAAvC,SAAD,CAAR;AACH;AACJ,KAVD;;AAcA,QAAI,CAACX,QAAL,EAAe;AACX,aAAOD,QAAQ,CAAC,QAAD,CAAf;AACH;;AACD,QAAI,CAACH,KAAK,CAACgB,GAAP,IAAehB,KAAK,CAACgB,GAAN,KAAcT,OAAjC,EAA2C;AACvCE,MAAAA,UAAU;AACb;AAGJ,GAxBQ,EAwBP,CAACT,KAAD,EAAQI,QAAR,EAAkBG,OAAlB,EAA2BJ,QAA3B,CAxBO,CAAT;AAyBF,SAAOL,OAAO,gBACZ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UADY,GAERC,KAAK,gBACT,QAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA,cAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,UADS,gBAGL;AAAA,4BACI,QAAC,MAAD;AAAA,6BACI;AAAA,6BAAcQ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UALN;AAcD;;GAtDuBL,W;UACHd,W,EAKFC,S;;;KANKa,W","sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react'\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nfunction reducer(state, action) {\n\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true, error: ''};\n        case 'FETCH_SUCCESS':\n            return { ...state, loading: false, order: action.payload , error: ''}; \n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n            \n        default:\n            return state;    \n    }\n\n\n}\n\nexport default function OrderScreen() {\n    const navigate = useNavigate();\n\n    const { state } = useContext(Store);\n    const { userInfo } = state;\n\n    const params = useParams();\n    const { id: orderId } = params;\n\n    const [{ loading, error, order }, dispatch] = useReducer(reducer, {\n        loading: true,\n        order: {},\n        error: '',\n    }, []);\n\n    useEffect(() => {\n\n        const fetchOrder = async () => {\n            try {\n                dispatch({ type: 'FETCH_REQUEST' });\n                const { data } = await axios.get(`/api/orders/${orderId}`, {\n                    headers: { authorization: ` Bearer ${userInfo.token}` },\n                });\n                dispatch({ type: 'FETCH_SUCCESS', payload: data });                \n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n            }\n        }\n\n\n\n        if (!userInfo) {\n            return navigate('/login');\n        }\n        if (!order._id || (order._id !== orderId)) {\n            fetchOrder();\n        }\n\n\n    },[order, userInfo, orderId, navigate]);\n  return loading ? (\n    <LoadingBox></LoadingBox>\n    ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n        <div>\n            <Helmet>\n                <title>Order {orderId}</title>\n            </Helmet>\n            <h1 className=\"my-3\">Order </h1>\n        </div>\n    );\n    \n  \n}\n"]},"metadata":{},"sourceType":"module"}