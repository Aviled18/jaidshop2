{"ast":null,"code":"import _slicedToArray from \"/var/www/jaidshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/var/www/jaidshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/var/www/jaidshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/var/www/jaidshop/frontend/src/Store.js\";\nimport React, { createContext, useReducer } from 'react';\nexport var Store = createContext();\nvar initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      // add to cart\n      var newItem = action.payload;\n      var existItem = state.cart.cartItems.find(function (item) {\n        return item._id === newItem._id;\n      });\n      var cartItems = existItem ? state.cart.cartItems.map(function (item) {\n        return item._id === existItem._id ? newItem : item;\n      }) : [].concat(_toConsumableArray(state.cart.cartItems), [newItem]);\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return _objectSpread({}, state, {\n        cart: _objectSpread({}, state.cart, {\n          cartItems: cartItems\n        })\n      });\n\n    case 'CART_REMOVE_ITEM':\n      {\n        var _cartItems = state.cart.cartItems.filter(function (item) {\n          return item._id !== action.payload._id;\n        });\n\n        localStorage.setItem('cartItems', JSON.stringify(_cartItems));\n        return _objectSpread({}, state, {\n          cart: _objectSpread({}, state.cart, {\n            cartItems: _cartItems\n          })\n        });\n      }\n\n    case 'USER_SIGNIN':\n      return _objectSpread({}, state, {\n        userInfo: action.payload\n      });\n\n    case 'USER_SIGNOUT':\n      return;\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return /*#__PURE__*/React.createElement(Store.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/var/www/jaidshop/frontend/src/Store.js"],"names":["React","createContext","useReducer","Store","initialState","cart","cartItems","localStorage","getItem","JSON","parse","reducer","state","action","type","newItem","payload","existItem","find","item","_id","map","setItem","stringify","filter","userInfo","StoreProvider","props","dispatch","value","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,IAAMC,KAAK,GAAGF,aAAa,EAA3B;AAEP,IAAMG,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP;AAHA;AADa,CAArB;;AAQA,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,OAAvB;AACA,UAAMC,SAAS,GAAGL,KAAK,CAACP,IAAN,CAAWC,SAAX,CAAqBY,IAArB,CAChB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAA/B;AAAA,OADgB,CAAlB;AAGA,UAAMd,SAAS,GAAGW,SAAS,GACvBL,KAAK,CAACP,IAAN,CAAWC,SAAX,CAAqBe,GAArB,CAAyB,UAACF,IAAD;AAAA,eACvBA,IAAI,CAACC,GAAL,KAAaH,SAAS,CAACG,GAAvB,GAA6BL,OAA7B,GAAuCI,IADhB;AAAA,OAAzB,CADuB,gCAInBP,KAAK,CAACP,IAAN,CAAWC,SAJQ,IAIGS,OAJH,EAA3B;AAKAR,MAAAA,YAAY,CAACe,OAAb,CAAqB,WAArB,EAAkCb,IAAI,CAACc,SAAL,CAAejB,SAAf,CAAlC;AACA,+BAAYM,KAAZ;AAAmBP,QAAAA,IAAI,oBAAOO,KAAK,CAACP,IAAb;AAAmBC,UAAAA,SAAS,EAATA;AAAnB;AAAvB;;AACF,SAAK,kBAAL;AAAyB;AACvB,YAAMA,UAAS,GAAGM,KAAK,CAACP,IAAN,CAAWC,SAAX,CAAqBkB,MAArB,CAChB,UAACL,IAAD;AAAA,iBAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAP,CAAeI,GAAtC;AAAA,SADgB,CAAlB;;AAGAb,QAAAA,YAAY,CAACe,OAAb,CAAqB,WAArB,EAAkCb,IAAI,CAACc,SAAL,CAAejB,UAAf,CAAlC;AACA,iCAAYM,KAAZ;AAAmBP,UAAAA,IAAI,oBAAOO,KAAK,CAACP,IAAb;AAAmBC,YAAAA,SAAS,EAATA;AAAnB;AAAvB;AACD;;AACD,SAAK,aAAL;AACE,+BAAYM,KAAZ;AAAmBa,QAAAA,QAAQ,EAAEZ,MAAM,CAACG;AAApC;;AAEF,SAAK,cAAL;AACE;;AAEF;AACE,aAAOJ,KAAP;AA5BJ;AA8BD;;AAED,OAAO,SAASc,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,oBACTzB,UAAU,CAACS,OAAD,EAAUP,YAAV,CADD;AAAA;AAAA,MAC5BQ,KAD4B;AAAA,MACrBgB,QADqB;;AAEnC,MAAMC,KAAK,GAAG;AAAEjB,IAAAA,KAAK,EAALA,KAAF;AAASgB,IAAAA,QAAQ,EAARA;AAAT,GAAd;AACA,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,KAAK,CAACG,QAArC,CAAP;AACD","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nexport const Store = createContext();\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems')\n      ? JSON.parse(localStorage.getItem('cartItems'))\n      : [],\n  },\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      // add to cart\n      const newItem = action.payload;\n      const existItem = state.cart.cartItems.find(\n        (item) => item._id === newItem._id\n      );\n      const cartItems = existItem\n        ? state.cart.cartItems.map((item) =>\n            item._id === existItem._id ? newItem : item\n          )\n        : [...state.cart.cartItems, newItem];\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n    case 'CART_REMOVE_ITEM': {\n      const cartItems = state.cart.cartItems.filter(\n        (item) => item._id !== action.payload._id\n      );\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n    }\n    case 'USER_SIGNIN':\n      return { ...state, userInfo: action.payload};\n\n    case 'USER_SIGNOUT':\n      return  \n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}