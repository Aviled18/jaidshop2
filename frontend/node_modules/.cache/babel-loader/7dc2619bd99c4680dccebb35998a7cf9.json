{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/jaidshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/var/www/jaidshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/var/www/jaidshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/var/www/jaidshop/frontend/src/components/Product.js\";\nimport React, { useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport { Store } from '../Store';\n\nfunction Product(props) {\n  var product = props.product;\n\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      ctxDispatch = _useContext.dispatch;\n\n  var cartItems = state.cart.cartItems;\n\n  var addToCartHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n      var existItem, quantity, _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              existItem = cartItems.find(function (x) {\n                return x._id === product._id;\n              });\n              quantity = existItem ? existItem.quantity + 1 : 1;\n              _context.next = 4;\n              return axios.get(\"/api/products/\".concat(item._id));\n\n            case 4:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n\n              if (!(data.countInStock < quantity)) {\n                _context.next = 9;\n                break;\n              }\n\n              window.alert('Sorry! Product is out of Stock');\n              return _context.abrupt(\"return\");\n\n            case 9:\n              ctxDispatch({\n                type: 'CART_ADD_ITEM',\n                payload: _objectSpread({}, item, {\n                  quantity: quantity\n                })\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addToCartHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/product/\".concat(product.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: product.image,\n    className: \"card-img-top\",\n    alt: product.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/product/\".concat(product.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, product.name)), /*#__PURE__*/React.createElement(Rating, {\n    rating: product.rating,\n    numReviews: product.numReviews,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Rs \", product.price), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return addToCartHandler(product);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Add to cart\")));\n}\n\nexport default Product;","map":{"version":3,"sources":["/var/www/jaidshop/frontend/src/components/Product.js"],"names":["React","useContext","Link","Card","Button","Rating","axios","Store","Product","props","product","state","ctxDispatch","dispatch","cartItems","cart","addToCartHandler","item","existItem","find","x","_id","quantity","get","data","countInStock","window","alert","type","payload","slug","image","name","rating","numReviews","price"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport { Store } from '../Store';\n\n\n\nfunction Product(props) {\n  const { product } = props;\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/${item._id}`);\n    if (data.countInStock < quantity) {\n      window.alert('Sorry! Product is out of Stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n  return (\n    <Card>\n      <Link to={`/product/${product.slug}`}>\n        <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      </Link>\n      <Card.Body>\n      <Link to={`/product/${product.slug}`}>\n          <Card.Title>{product.name}</Card.Title>\n        </Link>\n        <Rating rating={product.rating} numReviews={product.numReviews} />\n        <Card.Text>Rs {product.price}</Card.Text>\n        <Button onClick={() => addToCartHandler(product)}>Add to cart</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}